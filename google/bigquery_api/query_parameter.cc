// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.6.0

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google API Discovery Service.
// Service:
//   BigQuery API (bigquery/v2)
// Description:
//   A data platform for customers to create, manage, share and query data.
// Classes:
//   QueryParameter
// Documentation:
//   https://cloud.google.com/bigquery/

#include "google/bigquery_api/query_parameter.h"

#include <string>

#include <string>
#include "googleapis/client/data/jsoncpp_data.h"

#include "google/bigquery_api/query_parameter_type.h"
#include "google/bigquery_api/query_parameter_value.h"


#include "absl/strings/str_cat.h"


namespace google_bigquery_api {
using namespace googleapis;


// Object factory method (static).
QueryParameter* QueryParameter::New() {
  return new client::JsonCppCapsule<QueryParameter>;
}

// Standard immutable constructor.
QueryParameter::QueryParameter(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
QueryParameter::QueryParameter(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
QueryParameter::~QueryParameter() {
}

// Properties.

const QueryParameterType QueryParameter::get_parameter_type() const {
   const Json::Value& storage = Storage("parameterType");
   return client::JsonValueToCppValueHelper<QueryParameterType >(storage);
}

QueryParameterType QueryParameter::mutable_parameterType() {
  Json::Value* storage = MutableStorage("parameterType");
  return client::JsonValueToMutableCppValueHelper<QueryParameterType >(storage);
}

const QueryParameterValue QueryParameter::get_parameter_value() const {
   const Json::Value& storage = Storage("parameterValue");
   return client::JsonValueToCppValueHelper<QueryParameterValue >(storage);
}

QueryParameterValue QueryParameter::mutable_parameterValue() {
  Json::Value* storage = MutableStorage("parameterValue");
  return client::JsonValueToMutableCppValueHelper<QueryParameterValue >(storage);
}
}  // namespace google_bigquery_api
