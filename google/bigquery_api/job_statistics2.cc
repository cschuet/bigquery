// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.6.0

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google API Discovery Service.
// Service:
//   BigQuery API (bigquery/v2)
// Description:
//   A data platform for customers to create, manage, share and query data.
// Classes:
//   JobStatistics2
// Documentation:
//   https://cloud.google.com/bigquery/

#include "google/bigquery_api/job_statistics2.h"

#include <string>

#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/client/data/jsoncpp_data.h"

#include "google/bigquery_api/big_query_model_training.h"
#include "google/bigquery_api/explain_query_stage.h"
#include "google/bigquery_api/query_parameter.h"
#include "google/bigquery_api/query_timeline_sample.h"
#include "google/bigquery_api/table_reference.h"
#include "google/bigquery_api/table_schema.h"


#include "absl/strings/str_cat.h"


namespace google_bigquery_api {
using namespace googleapis;



// Object factory method (static).
JobStatistics2::JobStatistics2ReservationUsage* JobStatistics2::JobStatistics2ReservationUsage::New() {
  return new client::JsonCppCapsule<JobStatistics2ReservationUsage>;
}

// Standard immutable constructor.
JobStatistics2::JobStatistics2ReservationUsage::JobStatistics2ReservationUsage(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
JobStatistics2::JobStatistics2ReservationUsage::JobStatistics2ReservationUsage(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
JobStatistics2::JobStatistics2ReservationUsage::~JobStatistics2ReservationUsage() {
}

// Properties.
// Object factory method (static).
JobStatistics2* JobStatistics2::New() {
  return new client::JsonCppCapsule<JobStatistics2>;
}

// Standard immutable constructor.
JobStatistics2::JobStatistics2(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
JobStatistics2::JobStatistics2(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
JobStatistics2::~JobStatistics2() {
}

// Properties.

const TableReference JobStatistics2::get_ddl_target_table() const {
   const Json::Value& storage = Storage("ddlTargetTable");
   return client::JsonValueToCppValueHelper<TableReference >(storage);
}

TableReference JobStatistics2::mutable_ddlTargetTable() {
  Json::Value* storage = MutableStorage("ddlTargetTable");
  return client::JsonValueToMutableCppValueHelper<TableReference >(storage);
}

const BigQueryModelTraining JobStatistics2::get_model_training() const {
   const Json::Value& storage = Storage("modelTraining");
   return client::JsonValueToCppValueHelper<BigQueryModelTraining >(storage);
}

BigQueryModelTraining JobStatistics2::mutable_modelTraining() {
  Json::Value* storage = MutableStorage("modelTraining");
  return client::JsonValueToMutableCppValueHelper<BigQueryModelTraining >(storage);
}

const client::JsonCppArray<ExplainQueryStage > JobStatistics2::get_query_plan() const {
   const Json::Value& storage = Storage("queryPlan");
   return client::JsonValueToCppValueHelper<client::JsonCppArray<ExplainQueryStage > >(storage);
}

client::JsonCppArray<ExplainQueryStage > JobStatistics2::mutable_queryPlan() {
  Json::Value* storage = MutableStorage("queryPlan");
  return client::JsonValueToMutableCppValueHelper<client::JsonCppArray<ExplainQueryStage > >(storage);
}

const client::JsonCppArray<TableReference > JobStatistics2::get_referenced_tables() const {
   const Json::Value& storage = Storage("referencedTables");
   return client::JsonValueToCppValueHelper<client::JsonCppArray<TableReference > >(storage);
}

client::JsonCppArray<TableReference > JobStatistics2::mutable_referencedTables() {
  Json::Value* storage = MutableStorage("referencedTables");
  return client::JsonValueToMutableCppValueHelper<client::JsonCppArray<TableReference > >(storage);
}

const TableSchema JobStatistics2::get_schema() const {
   const Json::Value& storage = Storage("schema");
   return client::JsonValueToCppValueHelper<TableSchema >(storage);
}

TableSchema JobStatistics2::mutable_schema() {
  Json::Value* storage = MutableStorage("schema");
  return client::JsonValueToMutableCppValueHelper<TableSchema >(storage);
}

const client::JsonCppArray<QueryTimelineSample > JobStatistics2::get_timeline() const {
   const Json::Value& storage = Storage("timeline");
   return client::JsonValueToCppValueHelper<client::JsonCppArray<QueryTimelineSample > >(storage);
}

client::JsonCppArray<QueryTimelineSample > JobStatistics2::mutable_timeline() {
  Json::Value* storage = MutableStorage("timeline");
  return client::JsonValueToMutableCppValueHelper<client::JsonCppArray<QueryTimelineSample > >(storage);
}

const client::JsonCppArray<QueryParameter > JobStatistics2::get_undeclared_query_parameters() const {
   const Json::Value& storage = Storage("undeclaredQueryParameters");
   return client::JsonValueToCppValueHelper<client::JsonCppArray<QueryParameter > >(storage);
}

client::JsonCppArray<QueryParameter > JobStatistics2::mutable_undeclaredQueryParameters() {
  Json::Value* storage = MutableStorage("undeclaredQueryParameters");
  return client::JsonValueToMutableCppValueHelper<client::JsonCppArray<QueryParameter > >(storage);
}
}  // namespace google_bigquery_api
