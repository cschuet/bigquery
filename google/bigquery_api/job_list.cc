// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.6.0

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google API Discovery Service.
// Service:
//   BigQuery API (bigquery/v2)
// Description:
//   A data platform for customers to create, manage, share and query data.
// Classes:
//   JobList
// Documentation:
//   https://cloud.google.com/bigquery/

#include "google/bigquery_api/job_list.h"

#include <string>

#include <string>
#include "googleapis/client/data/jsoncpp_data.h"

#include "google/bigquery_api/error_proto.h"
#include "google/bigquery_api/job_configuration.h"
#include "google/bigquery_api/job_reference.h"
#include "google/bigquery_api/job_statistics.h"
#include "google/bigquery_api/job_status.h"


#include "absl/strings/str_cat.h"


namespace google_bigquery_api {
using namespace googleapis;



// Object factory method (static).
JobList::JobListJobs* JobList::JobListJobs::New() {
  return new client::JsonCppCapsule<JobListJobs>;
}

// Standard immutable constructor.
JobList::JobListJobs::JobListJobs(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
JobList::JobListJobs::JobListJobs(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
JobList::JobListJobs::~JobListJobs() {
}

// Properties.

const JobConfiguration JobList::JobListJobs::get_configuration() const {
   const Json::Value& storage = Storage("configuration");
   return client::JsonValueToCppValueHelper<JobConfiguration >(storage);
}

JobConfiguration JobList::JobListJobs::mutable_configuration() {
  Json::Value* storage = MutableStorage("configuration");
  return client::JsonValueToMutableCppValueHelper<JobConfiguration >(storage);
}

const ErrorProto JobList::JobListJobs::get_error_result() const {
   const Json::Value& storage = Storage("errorResult");
   return client::JsonValueToCppValueHelper<ErrorProto >(storage);
}

ErrorProto JobList::JobListJobs::mutable_errorResult() {
  Json::Value* storage = MutableStorage("errorResult");
  return client::JsonValueToMutableCppValueHelper<ErrorProto >(storage);
}

const JobReference JobList::JobListJobs::get_job_reference() const {
   const Json::Value& storage = Storage("jobReference");
   return client::JsonValueToCppValueHelper<JobReference >(storage);
}

JobReference JobList::JobListJobs::mutable_jobReference() {
  Json::Value* storage = MutableStorage("jobReference");
  return client::JsonValueToMutableCppValueHelper<JobReference >(storage);
}

const JobStatistics JobList::JobListJobs::get_statistics() const {
   const Json::Value& storage = Storage("statistics");
   return client::JsonValueToCppValueHelper<JobStatistics >(storage);
}

JobStatistics JobList::JobListJobs::mutable_statistics() {
  Json::Value* storage = MutableStorage("statistics");
  return client::JsonValueToMutableCppValueHelper<JobStatistics >(storage);
}

const JobStatus JobList::JobListJobs::get_status() const {
   const Json::Value& storage = Storage("status");
   return client::JsonValueToCppValueHelper<JobStatus >(storage);
}

JobStatus JobList::JobListJobs::mutable_status() {
  Json::Value* storage = MutableStorage("status");
  return client::JsonValueToMutableCppValueHelper<JobStatus >(storage);
}
// Object factory method (static).
JobList* JobList::New() {
  return new client::JsonCppCapsule<JobList>;
}

// Standard immutable constructor.
JobList::JobList(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
JobList::JobList(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
JobList::~JobList() {
}

// Properties.
}  // namespace google_bigquery_api
