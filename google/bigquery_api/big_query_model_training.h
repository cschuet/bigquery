// Copyright 2010 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1
//   Build date: 2018-10-08 17:45:39 UTC
//   on: 2019-03-01, 03:01:16 UTC
//   C++ generator version: 0.1.4

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   BigQuery API (bigquery/v2)
// Generated from:
//   Version: v2
//   Revision: 427
// Generated by:
//    Tool: google-apis-code-generator 1.5.1
//     C++: 0.1.4
#ifndef  GOOGLE_BIGQUERY_API_BIG_QUERY_MODEL_TRAINING_H_
#define  GOOGLE_BIGQUERY_API_BIG_QUERY_MODEL_TRAINING_H_

#include "googleapis/base/integral_types.h"
#include "googleapis/base/macros.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"

namespace Json {
class Value;
}  // namespace Json

namespace google_bigquery_api {
using namespace googleapis;

/**
 * No description provided.
 *
 * @ingroup DataObject
 */
class BigQueryModelTraining : public client::JsonCppData {
 public:
  /**
   * Creates a new default instance.
   *
   * @return Ownership is passed back to the caller.
   */
  static BigQueryModelTraining* New();

  /**
   * Standard constructor for an immutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit BigQueryModelTraining(const Json::Value& storage);

  /**
   * Standard constructor for a mutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit BigQueryModelTraining(Json::Value* storage);

  /**
   * Standard destructor.
   */
  virtual ~BigQueryModelTraining();

  /**
   * Returns a string denoting the type of this data object.
   *
   * @return <code>google_bigquery_api::BigQueryModelTraining</code>
   */
  const StringPiece GetTypeName() const {
    return StringPiece("google_bigquery_api::BigQueryModelTraining");
  }

  /**
   * Determine if the '<code>currentIteration</code>' attribute was set.
   *
   * @return true if the '<code>currentIteration</code>' attribute was set.
   */
  bool has_current_iteration() const {
    return Storage().isMember("currentIteration");
  }

  /**
   * Clears the '<code>currentIteration</code>' attribute.
   */
  void clear_current_iteration() {
    MutableStorage()->removeMember("currentIteration");
  }


  /**
   * Get the value of the '<code>currentIteration</code>' attribute.
   */
  int32 get_current_iteration() const {
    const Json::Value& storage = Storage("currentIteration");
    return client::JsonValueToCppValueHelper<int32 >(storage);
  }

  /**
   * Change the '<code>currentIteration</code>' attribute.
   *
   * [Output-only, Beta] Index of current ML training iteration. Updated during
   * create model query job to show job progress.
   *
   * @param[in] value The new value.
   */
  void set_current_iteration(int32 value) {
    client::SetJsonValueFromCppValueHelper<int32 >(
      value, MutableStorage("currentIteration"));
  }

  /**
   * Determine if the '<code>expectedTotalIterations</code>' attribute was set.
   *
   * @return true if the '<code>expectedTotalIterations</code>' attribute was
   * set.
   */
  bool has_expected_total_iterations() const {
    return Storage().isMember("expectedTotalIterations");
  }

  /**
   * Clears the '<code>expectedTotalIterations</code>' attribute.
   */
  void clear_expected_total_iterations() {
    MutableStorage()->removeMember("expectedTotalIterations");
  }


  /**
   * Get the value of the '<code>expectedTotalIterations</code>' attribute.
   */
  int64 get_expected_total_iterations() const {
    const Json::Value& storage = Storage("expectedTotalIterations");
    return client::JsonValueToCppValueHelper<int64 >(storage);
  }

  /**
   * Change the '<code>expectedTotalIterations</code>' attribute.
   *
   * [Output-only, Beta] Expected number of iterations for the create model
   * query job specified as num_iterations in the input query. The actual total
   * number of iterations may be less than this number due to early stop.
   *
   * @param[in] value The new value.
   */
  void set_expected_total_iterations(int64 value) {
    client::SetJsonValueFromCppValueHelper<int64 >(
      value, MutableStorage("expectedTotalIterations"));
  }

 private:
  void operator=(const BigQueryModelTraining&);
};  // BigQueryModelTraining
}  // namespace google_bigquery_api
#endif  // GOOGLE_BIGQUERY_API_BIG_QUERY_MODEL_TRAINING_H_
