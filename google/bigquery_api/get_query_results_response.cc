// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.6.0

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google API Discovery Service.
// Service:
//   BigQuery API (bigquery/v2)
// Description:
//   A data platform for customers to create, manage, share and query data.
// Classes:
//   GetQueryResultsResponse
// Documentation:
//   https://cloud.google.com/bigquery/

#include "google/bigquery_api/get_query_results_response.h"

#include <string>

#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/client/data/jsoncpp_data.h"

#include "google/bigquery_api/error_proto.h"
#include "google/bigquery_api/job_reference.h"
#include "google/bigquery_api/table_row.h"
#include "google/bigquery_api/table_schema.h"


#include "absl/strings/str_cat.h"


namespace google_bigquery_api {
using namespace googleapis;


// Object factory method (static).
GetQueryResultsResponse* GetQueryResultsResponse::New() {
  return new client::JsonCppCapsule<GetQueryResultsResponse>;
}

// Standard immutable constructor.
GetQueryResultsResponse::GetQueryResultsResponse(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GetQueryResultsResponse::GetQueryResultsResponse(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GetQueryResultsResponse::~GetQueryResultsResponse() {
}

// Properties.

const client::JsonCppArray<ErrorProto > GetQueryResultsResponse::get_errors() const {
   const Json::Value& storage = Storage("errors");
   return client::JsonValueToCppValueHelper<client::JsonCppArray<ErrorProto > >(storage);
}

client::JsonCppArray<ErrorProto > GetQueryResultsResponse::mutable_errors() {
  Json::Value* storage = MutableStorage("errors");
  return client::JsonValueToMutableCppValueHelper<client::JsonCppArray<ErrorProto > >(storage);
}

const JobReference GetQueryResultsResponse::get_job_reference() const {
   const Json::Value& storage = Storage("jobReference");
   return client::JsonValueToCppValueHelper<JobReference >(storage);
}

JobReference GetQueryResultsResponse::mutable_jobReference() {
  Json::Value* storage = MutableStorage("jobReference");
  return client::JsonValueToMutableCppValueHelper<JobReference >(storage);
}

const client::JsonCppArray<TableRow > GetQueryResultsResponse::get_rows() const {
   const Json::Value& storage = Storage("rows");
   return client::JsonValueToCppValueHelper<client::JsonCppArray<TableRow > >(storage);
}

client::JsonCppArray<TableRow > GetQueryResultsResponse::mutable_rows() {
  Json::Value* storage = MutableStorage("rows");
  return client::JsonValueToMutableCppValueHelper<client::JsonCppArray<TableRow > >(storage);
}

const TableSchema GetQueryResultsResponse::get_schema() const {
   const Json::Value& storage = Storage("schema");
   return client::JsonValueToCppValueHelper<TableSchema >(storage);
}

TableSchema GetQueryResultsResponse::mutable_schema() {
  Json::Value* storage = MutableStorage("schema");
  return client::JsonValueToMutableCppValueHelper<TableSchema >(storage);
}
}  // namespace google_bigquery_api
